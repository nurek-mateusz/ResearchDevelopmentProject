#bin/logstash -f jira-pipeline.conf --config.test_and_exit - to verify
#bin/logstash -f jira-pipeline.conf --config.reload.automatic - to automatic config reloading

input {  
	file 
	{
		path => "[PATH_TO_A_DIRECTORY]\jira.xml"
		start_position => "beginning"
		codec => multiline 
		{
			pattern => "<item>" # multiline pattern -> ^(expr1|expr2) 
			negate => true
			what => "previous"
			max_lines => 1000000
			#multiline_tag => "issue"
		}
	}
}
filter {
	xml {
      source => "message"
      store_xml => false
      xpath => {
        "/item/title/text()" => "title"
		"/item/description/p/text()" => "description"
		"/item/description/div/table/tbody/tr/td/pre/span/text()" => "stacktrace"
		"/item/summary/text()" => "summary"
		"/item/status/text()" => "status"
		"/item/resolution/text()" => "resolution"
		"/item/assignee/text()" => "assignee"
		"/item/reporter/text()" => "reporter"
		"/item/created/text()" => "created"
		"/item/updated/text()" => "updated"
		"/item/component/text()" => "component"
		"/item/comments/comment/@author" => "comment_author"
		"/item/comments/comment/p/text()" => "comment"
		#"concat(/item/comments/comment/@author[1],': ', /item/comments/comment/p/text())" => "comment__withhhauthor" 
      }
    }
	#mutate { 
	#	add_field => ["comment_with_author", "%{comment_author[]} %{comment[]}"]  #TODO: concat elements not arrays
    #} 
	mutate {
		gsub => [
		  # replace tabs with an empty string ""
		  "title", "\t", ""
		  
		]
    }
    mutate {
		gsub => [
		  "stacktrace", "\t", ""
		  
		]
    }
    mutate {
		gsub => [
		  "comment", "\t", ""
		  
		]
    }
	mutate {
			gsub => [
			  "summary", "\t", ""
			  
			]
	}	
 }
output {
    elasticsearch {
        hosts => [ "localhost:9200" ]
		#index => "jira"
    }
	stdout 
    {
        codec => rubydebug
    }
}
